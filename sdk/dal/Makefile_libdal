ifeq ($(targetbase),linux)
include $(MK_DIR)/sys.mk

OBJ_DIR=$(OBJ_BASE_DIR)/dal

LIB = dal
SRCS = $(shell find src/common -name "*.c")
ifeq ($(BOARD),ctc-sim)
SRCS += src/linux/user/dal_user_sim.c
else
ifeq ($(ChipAgent),TRUE)
SRCS += src/linux/user/dal_user_sim.c
else
SRCS += src/linux/user/dal_user.c
endif
endif

CPPFLAGS += -I$(SDK_DIR)/dal/include
CPPFLAGS += -I$(SDK_DIR)/dal/src/linux
CPPFLAGS += -I$(SDK_DIR)/sal/include
CPPFLAGS += -I$(SDK_DIR)/driver
CPPFLAGS += -I$(SDK_DIR)/driver/api

include $(MK_DIR)/lib.mk

endif

ifeq ($(targetbase),vxworks)
include $(MK_DIR)/sys_vx.mk

OBJ_DIR=$(OBJ_BASE_DIR)/dal

LIB = dal
OBJS = $(wildcard $(OBJ_DIR)/src/vxworks/*.o) $(wildcard $(OBJ_DIR)/src/common/*.o)
DEPS = $(wildcard $(OBJ_DIR)/src/vxworks/*.d) $(wildcard $(OBJ_DIR)/src/common/*.d)

$(LIB_DIR)/lib$(LIB).a: $(OBJS)
	$(shell mkdir -p $(dir $@))
	echo "LIB => $(subst $(BLD_DIR),build.$(CPU).$(VER),$@)" && \
	rm -rf $@ && \
	$(AR) cru $@ $^ && \
	$(RANLIB) $@

.PHONY: clean
clean:
	rm -rf $(LIB_DIR)/lib$(LIB).a

.PHONY: FORCE
FORCE:
endif
